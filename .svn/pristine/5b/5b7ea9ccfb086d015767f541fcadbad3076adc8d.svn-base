package com.etaoguan.wea.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

import com.etaoguan.wea.service.IPushMessageJobService;
import com.etaoguan.wea.service.IPushMessageService;
import com.etaoguan.wea.util.ExceptionUtil;
import com.etaoguan.wea.util.JpushUtils;
import com.etaoguan.wea.vo.PushMessage;
import com.etaoguan.wea.vo.PushMessageResult;

@Service("pushMessageJobService")
public class PushMessageJobService implements IPushMessageJobService{

	private final static Log logger = LogFactory.getLog(PushMessageJobService.class);
			
	@Resource(name="pushMessageService") 
	protected IPushMessageService iPushMessageService;
	
	@Transactional(readOnly = false, propagation = Propagation.NOT_SUPPORTED)
	public void getNSendPushMessages() {
		logger.info("start get presend pushmessages...");
		List<PushMessage> pushMessages = iPushMessageService.getAllPreSendPushMessages();
		logger.info("message size = "+pushMessages.size());
		
		if(pushMessages.size()==0){
			return;
		}
		List<Long> messageIds = new ArrayList<Long>();
		for(PushMessage pushMessage:pushMessages){
			messageIds.add(pushMessage.getMessageId());
		}
		iPushMessageService.updatePushMessageProcessStatus2Submit(messageIds);
		for(PushMessage pushMessage:pushMessages){
			PushMessageResult pushMessageResult = new PushMessageResult();
			try{
				pushMessageResult = JpushUtils.startPushMessage(pushMessage);
			}catch(Exception ex){
				pushMessageResult.setErrorCode("E");
				pushMessageResult.setErrorMessage(ExceptionUtil.getExMessage(ex));
			}
			pushMessageResult.setMessageId(pushMessage.getMessageId());
			iPushMessageService.addPushMessageResult(pushMessageResult);
			if("E".equalsIgnoreCase(pushMessageResult.getResultStatus())){
				iPushMessageService.updatePushMessageProcessStatus2Failed(pushMessage.getMessageId(), "");
			}else{
				
				iPushMessageService.updatePushMessageProcessStatus2Success(pushMessage.getMessageId(), "");
			}
		}
		
		
	}
	
	

}
